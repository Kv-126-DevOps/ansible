---
name: CI
    
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
jobs:
    
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Ansible lint
        uses: ansible-community/ansible-lint-action@main
        env:
          ANSIBLE_FORCE_COLOR: '1'
    
  Molecule_Common:
      needs:
        - Lint
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Setup Python 3.10
          uses: actions/setup-python@v4
          with:
            python-version: '3.10' 

        - name: Install dependencies
          run: |
            python3 -m pip install molecule[docker] yamllint virtualenv ansible-lint
            ansible-galaxy collection install community.general
            ansible-galaxy collection install community.docker
    
        - name: 'Common | Molecule Test'
          working-directory: ./roles/common/
          run: |
            molecule --debug test
          env:
            ANSIBLE_FORCE_COLOR: '1'

  Molecule_Json_Filter:
      needs:
        - Lint
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Setup Python 3.10
          uses: actions/setup-python@v4
          with:
            python-version: '3.10' 

        - name: Install dependencies
          run: |
            python3 -m pip install molecule[docker] yamllint virtualenv ansible-lint
            ansible-galaxy collection install community.general
            ansible-galaxy collection install community.docker
            ansible-galaxy collection install amazon.aws
    
        - name: 'Json_Filter | Molecule Test'
          working-directory: ./roles/json_filter/
          run: |
            molecule --debug test
          env:
            ANSIBLE_FORCE_COLOR: '1'

  Molecule_Rabbit_to_DB:
      needs:
        - Lint
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Setup Python 3.10
          uses: actions/setup-python@v4
          with:
            python-version: '3.10' 

        - name: Install dependencies
          run: |
            python3 -m pip install molecule[docker] yamllint virtualenv ansible-lint botocore boto3
            ansible-galaxy collection install community.general
            ansible-galaxy collection install community.docker
            ansible-galaxy collection install amazon.aws

        - name: Configure AWS Credentials ðŸ”§
          uses: aws-actions/configure-aws-credentials@v1.6.1 # Version at the time of this writing
          with: # We are loading keys stored in secrets
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-central-1
    
        - name: 'Rabbit_to_DB | Molecule Test'
          working-directory: ./roles/rabbit_to_db/
          run: |
            molecule --debug test
          env:
            ANSIBLE_FORCE_COLOR: '1'

  Molecule_Frontend:
      needs:
        - Lint
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Setup Python 3.10
          uses: actions/setup-python@v4
          with:
            python-version: '3.10' 

        - name: Install dependencies
          run: |
            python3 -m pip install molecule[docker] yamllint virtualenv ansible-lint
            ansible-galaxy collection install community.general
            ansible-galaxy collection install community.docker
            ansible-galaxy collection install amazon.aws
    
        - name: 'Frontend | Molecule Test'
          working-directory: ./roles/frontend/
          run: |
            molecule --debug test
          env:
            ANSIBLE_FORCE_COLOR: '1'
